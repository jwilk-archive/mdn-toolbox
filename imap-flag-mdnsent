#!/usr/bin/env python3
# encoding=UTF-8

# Copyright Â© 2020-2023 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

import argparse
import getpass
import imaplib
import ssl
import sys

0_0  # Python >= 3.6 is required

def main():
    ap = argparse.ArgumentParser()
    ap.add_argument('--host', metavar='HOST', required=True)
    ap.add_argument('--ca-file', metavar='CA-FILE')
    ap.add_argument('--user', metavar='USER', required=True)
    ap.add_argument('--password-file', metavar='FILE', help='read password from FILE')
    opts = ap.parse_args()
    if opts.password_file is not None:
        with open(opts.password_file, 'rt') as file:
            password = file.readline()
        password = password.rstrip('\n')
    else:
        password = getpass.getpass(f'{opts.host} password: ')
    if not password:
        print(f'{ap.prog}: error: empty password', file=sys.stderr)
        sys.exit(1)
    tls_context = ssl.create_default_context(cafile=opts.ca_file)
    conn = imaplib.IMAP4_SSL(host=opts.host, ssl_context=tls_context)
    conn.debug = 4
    conn.login(opts.user, password)
    conn.select()
    tp, data = conn.search(None, 'ALL')
    for num in data[0].split():
        conn.store(num, '+FLAGS', '$MDNSent')
    conn.close()
    conn.logout()

if __name__ == '__main__':
    main()

# vim:ts=4 sts=4 sw=4 et
